openapi: "3.0.1"
info:
  title: "Trenako"
  description: |
    A model railway collections api
  version: 1.0.0
  termsOfService: "http://www.trenako.com/terms/"
  contact:
    email: "mail@trenako.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:5000
    description: local
security:
  - BearerAuth: []

paths:
  /api/account:
    post:
      tags:
        - account
      summary: create new accounts
      requestBody:
        description: a new account
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '200': 
          description: a new account has been created
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: the account already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error' 
  /api/authenticate:
    post:
      tags:
        - account
      summary: authenticate a user
      requestBody:
        description: a new account
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        '200': 
          description: the account authentication
          content: 
            'application/vnd.trenako.authentication+json':
              schema: 
                $ref: '#/components/schemas/Authentication'   
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'         
  /api/brands:
    get:
      tags:
        - brands
      summary: returns the list of brands
      responses:
        '200':
          description: ok
          content:
            'application/vnd.trenako.brands+json':
              schema:
                $ref: '#/components/schemas/Brands'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
        '404':
          description: brands were not found                
        '500':
          $ref: '#/components/responses/Error' 
    post:
      tags:
        - brands
      summary: create a new brand
      requestBody:
        description: a new brand
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/BrandRequest'
      responses:
        '201': 
          description: a new brand has been created
          headers:
            location:
              schema:
                type: string
                format: uri
              description: the uri for the newly created brand
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '409':
          description: the brand already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'           
  /api/brands/{brandId}:
    get:
      tags:
        - brands
      summary: return the information for the brand with the brandId.
      parameters:
        - name: brandId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses: 
        '200':
          description: OK
          content: 
            'application/vnd.trenako.brand+json':
              schema: 
                $ref: '#/components/schemas/Brand'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
        '404':
          description: brand was not found
        '500':
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - brands
      summary: delete the brand
      parameters:
        - name: brandId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:            
        '204':
          description: brand was removed
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '404':
          description: brand to remove not found
        '500':
          $ref: '#/components/responses/Error'          
    put:
      tags:
        - brands
      summary: updates a brand
      parameters:
        - name: brandId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: the updated brand
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/BrandRequest'
      responses:
        '204': 
          description: a new brand has been created
          headers:
            location:
              schema:
                type: string
                format: uri
              description: the uri for the newly created brand
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '409':
          description: the brand already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'
  /api/railways:
    get:
      tags:
        - railways
      summary: returns the list of railways - sorted by their name
      responses:
        '200': 
          description: OK
          content:
            'application/vnd.trenako.railways+json':
              schema:
                $ref: '#/components/schemas/Railways'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
        '404':
          description: railways were not found                
        '500':
          $ref: '#/components/responses/Error'  
    post:
      tags:
        - railways
      summary: create a new railway
      requestBody:
        description: a new railway
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RailwayRequest'
      responses:
        '201': 
          description: a new railway has been created
          headers:
            location:
              schema:
                type: string
                format: uri
              description: the uri for the newly created railway
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '409':
          description: the railway already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'
  /api/railways/{railwayId}:
    get:
      tags:
        - railways
      summary: return the information for the railway with the railwayId slug.
      parameters:
        - name: railwayId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses: 
        '200':
          description: OK
          content: 
            'application/vnd.trenako.railway+json':
              schema: 
                $ref: '#/components/schemas/Railway'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
        '404':
          description: railway was not found
        '500':
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - railways
      summary: delete the railway
      parameters:
        - name: railwayId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:            
        '204':
          description: railway was removed
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '404':
          description: railway to remove not found
        '500':
          $ref: '#/components/responses/Error'         
    put:
      tags:
        - railways
      summary: create a new railway
      requestBody:
        description: a new railway
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RailwayRequest'
      responses:
        '204': 
          description: the railway has been updated
        '400':
          $ref: '#/components/responses/BadRequest' 
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'
  /api/scales:
    get:
      tags:
        - scales
      summary: return the list of scales
      responses:
        '200': 
          description: OK
          content:
            'application/vnd.trenako.scales+json':
              schema:
                $ref: '#/components/schemas/Scales'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
        '404':
          description: no scales were found
        '500':
          $ref: '#/components/responses/Error'          
    post:
      tags:
        - scales
      summary: create a new scale
      requestBody:
        description: a new scale
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleRequest'      
      responses:
        '201': 
          description: a new scale has been created
          headers:
            location:
              schema:
                type: string
                format: uri
              description: the uri for the newly scale railway
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '409':
          description: the scale already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'           
        '500':
          $ref: '#/components/responses/Error'
  /api/scales/{scaleId}:
    get:
      tags:
        - scales
      summary: return the scale
      parameters:
        - name: scaleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses: 
        '200':
          description: OK
          content: 
            'application/vnd.trenako.scale+json':
              schema: 
                $ref: '#/components/schemas/Scale'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
        '404':
          description: scale with scaleId was not found
        '500':
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - scales
      summary: delete the scale
      parameters:
        - name: scaleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:            
        '204':
          description: scale was removed
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '404':
          description: scale to remove was not found
        '500':
          $ref: '#/components/responses/Error'    
    put:
      tags:
        - scales
      summary: updates a scale
      parameters:
        - name: scaleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: the updated scale
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ScaleRequest'
      responses:
        '204': 
          description: the scale has been updated
        '400':
          $ref: '#/components/responses/BadRequest' 
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '409':
          description: the scale already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'
  /api/catalog-items:
    post:
      tags:
        - catalog-items
      summary: create a new catalog items
      requestBody:
        description: a new catalog items
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItemRequest'      
      responses:
        '201': 
          description: a new catalog item has been created
          headers:
            location:
              schema:
                type: string
                format: uri
              description: the uri for the new catalog item
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '409':
          description: the catalog item already exists
          content: 
            'application/vnd.trenako.problem+json':
              schema: 
                $ref: '#/components/schemas/ProblemDetail'    
        '422':
          $ref: '#/components/responses/UnprocessableEntity'         
        '500':
          $ref: '#/components/responses/Error'
  /api/catalog-items/{catalogItemId}:
    get:
      tags:
        - catalog-items
      summary: Get the catalog item with the prodived id
      parameters:
        - name: catalogItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid        
      responses:
        '200':
          description: OK
          content: 
            'application/vnd.trenako.catalog.item+json':
              schema: 
                $ref: '#/components/schemas/CatalogItem'        
        '401':
          $ref: '#/components/responses/UnauthorizedError'        
        '404':
        '500':     
          $ref: '#/components/responses/Error'  
    put:
      tags:
        - catalog-items    
      summary: Updates the catalog item
      parameters:
        - name: catalogItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid      
      requestBody:
        description: the updated catalog item
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CatalogItemRequest'            
      responses:
        '204':
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'          
        '404':
        '409':
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':  
          $ref: '#/components/responses/Error'  
  /api/catalog-items/{catalogItemId}/rolling-stocks:
    post:
      tags:
        - catalog-items
      summary:
      parameters:
        - name: catalogItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid  
      responses:
        '201':
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
        '409':
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'
  /api/catalog-items/{catalogItemId}/rolling-stocks/{rollingStockId}:
    delete:
      tags:
        - catalog-items  
      summary: delete the rolling stock from the catalog item
      parameters:
        - name: catalogItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid  
        - name: rollingStockId
          in: path
          required: true
          schema:
            type: string
            format: urn                        
      responses:
        '204':
        '400':
          $ref: '#/components/responses/BadRequest'        
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
        '409':
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':    
          $ref: '#/components/responses/Error'
    put:
      tags:
        - catalog-items    
      summary: update the rolling stock in the catalog item
      parameters:
        - name: catalogItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid  
        - name: rollingStockId
          in: path
          required: true
          schema:
            type: string
            format: urn           
      responses:
        '204':
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
        '409':
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    BadRequest:
      description: the request is not valid
      content: 
        'application/vnd.trenako.problem+json':
          schema: 
            $ref: '#/components/schemas/ProblemDetail'
    Error:
      description: an error has occurred
      content: 
        'application/vnd.trenako.problem+json':
      schema: 
        $ref: '#/components/schemas/ProblemDetail'
    UnauthorizedError:
      description: Access token is missing or invalid
    UnprocessableEntity:
      description: the request is unprocessable
      content: 
        'application/vnd.trenako.problem+json':
          schema: 
            $ref: '#/components/schemas/ProblemDetail'   

  schemas:
    AccountRequest:
      type: object
      properties:
        username: 
          type: string
          minLength: 4
          maxLength: 50
        password:
          type: string
          format: password
          minLength: 8
          maxLength: 50
        mail_address:
          type: string
          format: email
      required:
        - username
        - password
    Address:
      description: an address of a location
      type: object
      properties:
        address_line1:
          type: string
          maxLength: 250
        address_line2:
          type: string
          maxLength: 250   
        city:
          type: string
          maxLength: 100
        region:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 2
      required:
        - address_line1
        - city
        - postal_code
        - country
    Authentication:
      type: object
      properties:
        username: 
          type: string
        token:
          type: string
      required:
        - username
        - token        
    AuthenticationRequest:
      type: object
      properties:
        username: 
          type: string
          minLength: 4
          maxLength: 50
        password:
          type: string
          format: password
          minLength: 8
          maxLength: 50
      required:
        - username
        - password
    Brand:
      description: a model railways manufacturer 
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Self'
        name:
          type: string
          maxLength: 25
        company_name:
          type: string
        group_name:
          type: string
        mail_addess:
          type: string
        website_url:
          type: string
          format: uri
        logo_url:
          type: string
          format: uri
        address:
          $ref: '#/components/schemas/Address'
        kind:
          type: string
          enum:
            - INDUSTRIAL
            - BRASS_MODELS
        status:
          type: string
          enum:
            - ACTIVE
            - OUT_OF_BUSINESS
    BrandRequest:
      description: a model railways manufacturer 
      type: object
      properties:
        name:
          type: string
          maxLength: 25
        company_name:
          type: string
        group_name:
          type: string
        description:
          type: string
          maxLength: 1000
        mail_addess:
          type: string
        website_url:
          type: string
          format: uri
        logo_url:
          type: string
          format: uri
        address:
          $ref: '#/components/schemas/Address'
        kind:
          type: string
          enum:
            - INDUSTRIAL
            - BRASS_MODELS
        status:
          type: string
          enum:
            - ACTIVE
            - OUT_OF_BUSINESS
      required:
        - name
        - kind
    Brands:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Pagination'
        limit:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
    CatalogItem:
      type: object
      properties:
        brand:
          $ref: '#/components/schemas/CatalogItemBrand'
        item_number:
          type: string
        scale:
          $ref: '#/components/schemas/CatalogItemScale'
        description:
          type: string
        prototype_description:
          type: string
        model_description:
          type: string
        delivery_date:
          type: string
        available:
          type: boolean
        power_method:
          type: string
          enum:
            - DC
            - AC
            - TRIX_EXPRESS
            - NONE
        category:
          type: string
          enum:
            - STEAM_LOCOMOTIVE
            - DIESEL_LOCOMOTIVE
            - ELECTRIC_LOCOMOTIVE
            - RAILCAR
            - ELECTRIC_MULTIPLE_UNIT
            - FREIGHT_CAR
            - PASSENGER_CAR
            - TRAIN_SET
            - STARTER_SET
        rolling_stocks:
          type: array
          items:
            $ref: '#/components/schemas/RollingStock'   
        created_at:
          description: when got this catalog item created
          type: string
          format: 'date-time'
        modified_at:
          description: when got this catalog item last updated
          type: string
          format: 'date-time'                              
      required:
        - brand
        - item_number
        - scale
        - description
    CatalogItemBrand:
      type: object
      properties:
        _link:
          $ref: '#/components/schemas/Self'
        name: 
          type: string
      required:
        - _link
        - name        
    CatalogItemRequest:
      type: object
      properties:
        brand:
          type: string
          minLength: 3
          maxLength: 25
        item_number:
          type: string
          minLength: 3
          maxLength: 10
        scale:
          type: string
        description:
          type: string
          maxLength: 250
        prototype_description:
          type: string
          maxLength: 1000
        model_description:
          type: string
          maxLength: 1000
        delivery_date:
          type: string
        available:
          type: boolean
        power_method:
          type: string
          enum:
            - DC
            - AC
            - TRIX_EXPRESS
            - NONE
        category:
          type: string
          enum:
            - STEAM_LOCOMOTIVE
            - DIESEL_LOCOMOTIVE
            - ELECTRIC_LOCOMOTIVE
            - RAILCAR
            - ELECTRIC_MULTIPLE_UNIT
            - FREIGHT_CAR
            - PASSENGER_CAR
            - TRAIN_SET
            - STARTER_SET
        rolling_stocks:
          type: array
          items:
            $ref: '#/components/schemas/RollingStock'   
        created_at:
          description: when got this catalog item created
          type: string
          format: 'date-time'
        modified_at:
          description: when got this catalog item last updated
          type: string
          format: 'date-time'                              
      required:
        - brand
        - item_number
        - scale
        - description        
    CatalogItemScale:
      type: object
      properties:
        _link:
          $ref: '#/components/schemas/Self'
        name: 
          type: string
      required:
        - _link
        - name   
    LengthOverBuffer:
      type: object
      properties:
        millimeters:
          type: number
        inches:
          type: number
    Pagination:
      type: object
      properties:
        _self: 
          description: pagination link pointing to the current page
          type: string
          format: uri
        prev:
          description: pagination link pointing to the previous page
          type: string
          format: uri
        next:
          description: pagination link pointing to the next page
          type: string
          format: uri
      example:
        _self: 'http://mysite/current-page'
        prev: 'http://mysite/previous-page'
        next: 'http://mysite/next-page'
    PeriodOfActivity:
      type: object
      properties:
        status:
          type: string
          enum: 
            - ACTIVE
            - INACTIVE
        operating_since:
          type: string
          format: date
        operating_until:
          type: string
          format: date
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        status:
          type: number
          format: int32
    Railway:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Self'
        name:
          type: string
          minLength: 1
          maxLength: 25
        company_name:
          type: string
          maxLength: 250
        country:
          type: string
          maxLength: 2
        description:
          type: string
          maxLength: 1000
        total_length:
          $ref: '#/components/schemas/TotalLength'
        period_of_activity:
          $ref: '#/components/schemas/PeriodOfActivity'
        railway_gauge:
          $ref: '#/components/schemas/RailwayGauge'
        headquarters:
          type: string
          maxLength: 100
        logo_url:
          type: string
          maxLenght: 250
          format: uri
        website_url:
          type: string
          maxLength: 250
          format: uri
      required:
        - name
        - country
    RailwayRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 25
        company_name:
          type: string
          maxLength: 250
        country:
          type: string
          maxLength: 2
        description:
          type: string
          maxLength: 1000
        total_length:
          $ref: '#/components/schemas/TotalLength'
        period_of_activity:
          $ref: '#/components/schemas/PeriodOfActivity'
        railway_gauge:
          $ref: '#/components/schemas/RailwayGauge'
        headquarters:
          type: string
          maxLength: 100
        logo_url:
          type: string
          maxLenght: 250
          format: uri
        website_url:
          type: string
          maxLength: 250
          format: uri
      required:
        - name
        - country
    RailwayGauge:
      type: object
      properties:
        millimeters:
          type: number
          format: int32
        inches:
          type: number
          format: int32
        gauge:
          type: string
          enum:
            - NARROW
            - STANDARD
      example:
        millimeters: 16.5
        inches: 0.65
        gauge: standard
    Railways:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Pagination'
        limit:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/Railway'
    RollingStock:
      type: object
      properties:
        rolling_stock_id:
          type: string
          format: urn
        epoch:
          type: string
        length_over_buffer:
          $ref: '#/components/schemas/LengthOverBuffer'
        min_radius:
          type: number
        railway:
          $ref: '#/components/schemas/RollingStockRailway'
        class_name:
          type: string
        road_number:
          type: string
        type_name:
          type: string
        series:
          type: string
        livery:
          type: string
        depot:
          type: string
        couplers:
          type: string
          enum:
            - NEM_352
            - NEM_355
            - NEM_356
            - NEM_357
            - NEM_358
            - NEM_360
            - NEM_362
            - NEM_363
            - NEM_364
            - NEM_370
        dcc_interface:
          type: string
          enum:
            - NONE
            - NEM_651
            - NEM_652,
            - PLUX_8,
            - PLUX_16,
            - PLUX_22,
            - NEXT_18,
            - MTC_21
        control:
          type: string
          enum:
            - NONE
            - DCC_READY
            - DCC_FITTED
            - DCC_SOUND
        category:
          type: string
          enum:
            - STEAM_LOCOMOTIVE
            - DIESEL_LOCOMOTIVE
            - ELECTRIC_LOCOMOTIVE
            - RAILCAR
            - ELECTRIC_MULTIPLE_UNIT
            - FREIGHT_CAR
            - PASSENGER_CAR
        service_level:
          type: string
        passenger_car_type:
          type: string
        freight_car_type:
          type: string    
    RollingStockRailway:
      type: object
      properties:
        _link:
          $ref: '#/components/schemas/Self'
        name: 
          type: string
      required:
        - _link
        - name
    RollingStockRequest:
      type: object
      properties:
        epoch:
          type: string
        length_over_buffer:
          $ref: '#/components/schemas/LengthOverBuffer'
        min_radius:
          type: number
        railway:
          type: string
        class_name:
          type: string
        road_number:
          type: string
        type_name:
          type: string
        series:
          type: string
        livery:
          type: string
        depot:
          type: string
        couplers:
          type: string
          enum:
            - NEM_352
            - NEM_355
            - NEM_356
            - NEM_357
            - NEM_358
            - NEM_360
            - NEM_362
            - NEM_363
            - NEM_364
            - NEM_370
        dcc_interface:
          type: string
          enum:
            - NONE
            - NEM_651
            - NEM_652,
            - PLUX_8,
            - PLUX_16,
            - PLUX_22,
            - NEXT_18,
            - MTC_21
        control:
          type: string
          enum:
            - NONE
            - DCC_READY
            - DCC_FITTED
            - DCC_SOUND
        category:
          type: string
          enum:
            - STEAM_LOCOMOTIVE
            - DIESEL_LOCOMOTIVE
            - ELECTRIC_LOCOMOTIVE
            - RAILCAR
            - ELECTRIC_MULTIPLE_UNIT
            - FREIGHT_CAR
            - PASSENGER_CAR
        service_level:
          type: string
        passenger_car_type:
          type: string
        freight_car_type:
          type: string          
      required:
        - railway
        - category
        - epoch
    Scale:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Self'
        name:
          type: string
          minLength: 1
          maxLength: 15
        description:
          type: string
          maxLength: 1000
        ratio:
          type: number
        gauge:
          $ref: '#/components/schemas/RailwayGauge'
        standard:
          type: array
          items:
            type: string
      required:
        - name
        - ratio
    ScaleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 15
        description:
          type: string
          maxLength: 1000
        ratio:
          type: number
        gauge:
          $ref: '#/components/schemas/RailwayGauge'
        standard:
          type: array
          items:
            type: string
      required:
        - name
        - ratio
    Scales:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Pagination'
        limit:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/Scale'    
    Self:
      type: object
      properties:
        _self:
          type: string
          format: uri
        slug:
          type: string
      required:
        - _self
        - slug
    TotalLength:
      type: object
      properties:
        miles:
          type: number
          format: int32
        kilometers:
          type: number
          format: int32
      example:
        miles: 123
        kilometers: 123   
