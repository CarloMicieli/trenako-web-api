name: dev
on:
  push:
    branches:
      - dev

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -D warnings

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v1

      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Check formatting with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Linting with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: trenako-web-api
          path: target/debug/trenako-web-api

  validation:
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download build output
        uses: actions/download-artifact@v2
        with:
          name: trenako-web-api

      - name: Copy build output
        run: |
          mkdir release
          cp ./trenako-web-api release

      - name: Build docker image for the service
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .docker/webapi.dockerfile
          push: false
          tags: trenako-web-api:latest
          labels: trenako-web-api:latest

      - run: docker image ls

      - uses: addnab/docker-run-action@v3
        with:
          image: trenako-web-api:latest

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          working-directory: acceptance-tests
      
      - name: Build & run tests with Gradle
        working-directory: acceptance-tests
        run: ./gradlew check
          
